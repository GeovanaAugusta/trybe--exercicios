-- Exerc√≠cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.
SELECT mov.title AS 'Film title',
box.domestic_sales AS 'Domestic sales', box.international_sales AS 'International Sales'
FROM pixar2.movies  AS mov
INNER JOIN pixar2.box_office AS box
ON mov.id = box.movie_id;

-- üöÄ Exerc√≠cio 2: Utilizando o INNER JOIN, fa√ßa uma busca que retorne o n√∫mero de vendas para cada filme que possui um n√∫mero maior de vendas internacionais (international_sales) do que vendas nacionais (domestic_sales).
SELECT mov.title AS 'Film title',
box.domestic_sales AS 'Domestic sales', box.international_sales AS 'International Sales'
FROM pixar2.movies  AS mov
INNER JOIN pixar2.box_office AS box
ON mov.id = box.movie_id
WHERE box.domestic_sales < box.international_sales;

-- üöÄ Exerc√≠cio 3: Utilizando o INNER JOIN, fa√ßa uma busca que retorne os filmes e sua avalia√ß√£o (rating) em ordem decrescente.
SELECT mov.title AS 'Film title',
box.rating AS 'Rating'
FROM pixar2.movies  AS mov
INNER JOIN pixar2.box_office AS box
ON mov.id = box.movie_id
ORDER BY mov.title DESC;

-- Exerc√≠cio 4: Utilizando o LEFT JOIN, fa√ßa uma busca que retorne todos os dados dos cinemas, mesmo os que n√£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que est√£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfab√©tica.
SELECT
theater.id, theater.name, theater.location,
mov.id, mov.title, mov.director, mov.year, mov.length_minutes, mov.theater_id
FROM pixar2.theater AS theater
LEFT JOIN pixar2.movies AS mov
ON mov.theater_id = theater.id
ORDER BY theater.name;

-- Exerc√≠cio 5: Utilizando o RIGHT JOIN, fa√ßa uma busca que retorne todos os dados dos filmes, mesmo os que n√£o est√£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfab√©tica.
SELECT
theater.id, theater.name, theater.location,
mov.id, mov.title, mov.director, mov.year, mov.length_minutes, mov.theater_id
FROM pixar2.theater AS theater
RIGHT JOIN pixar2.movies AS mov
ON  theater.id = mov.theater_id
ORDER BY theater.name;